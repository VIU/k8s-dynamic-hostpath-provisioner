#
# Create required Kubernetes stuff.
#
# Original file provided by Torchbox Ltd.
#
# Modified to use PodSecurityPolicy 


apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: kube-system
  name: dynamic-hostpath-provisioner

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: dynamic-hostpath-provisioner
subjects:
- kind: ServiceAccount
  name: dynamic-hostpath-provisioner
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:persistent-volume-provisioner

---
#security policy to allow privileged pods
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: dynamic-hostpath-provisioner-pod-security-policy
spec:
  privileged: true  # Allow privileged pods
  # The rest fills in some required fields.
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  volumes:
  - '*'

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dynamic-hostpath-provisioner-extra
rules:
- apiGroups: [""]
  resources: ["persistentvolumes"]
  verbs: ["get", "list", "watch", "create", "delete"]
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "update", "patch"]
- apiGroups: [""]
  resources: ["endpoints"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: ["extensions"]
  resources: ["podsecuritypolicies"]
  resourceNames: ["dynamic-hostpath-provisioner-pod-security-policy"]
  verbs: ["use"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dynamic-hostpath-provisioner-extra
subjects:
- kind: ServiceAccount
  namespace: kube-system
  name: dynamic-hostpath-provisioner
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dynamic-hostpath-provisioner-extra

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: dynamic-hostpath-provisioner
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dynamic-hostpath-provisioner
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: dynamic-hostpath-provisioner
    spec:
      serviceAccountName: dynamic-hostpath-provisioner
      containers:
      - name: dynamic-hostpath-provisioner
        image: kazhar/k8s-dynamic-hostpath-provisioner:develop
        securityContext:
          privileged: true
        volumeMounts:
        - name: volumes
          #change to your own directory
          #change directory also in storageclass.yaml
          mountPath: /dynfs
        resources:
          limits:
            cpu: 100m
            memory: 64Mi
          requests:
            cpu: 100m
            memory: 64Mi
      volumes:
      - name: volumes
        hostPath:
          #change to your own directory
          #change directory also in storageclass.yaml
          path: /dynfs
